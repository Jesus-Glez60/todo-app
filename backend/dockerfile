# Building layer
FROM node:alpine3.18 as development

# Optional NPM automation (auth) token build argument
# ARG NPM_TOKEN

# Optionally authenticate NPM registry
# RUN npm set //registry.npmjs.org/:_authToken ${NPM_TOKEN}

WORKDIR /app

# Copy configuration files
COPY tsconfig*.json ./
COPY package*.json ./
COPY prisma ./prisma

# Install dependencies from package-lock.json, see https://docs.npmjs.com/cli/v7/commands/npm-ci

RUN npm ci

# Copy application sources (.ts, .tsx, js)
COPY . .

# Build application (produces dist/ folder)
RUN npx prisma generate
RUN npm run build

# Runtime (production) layer
FROM node:alpine3.18 as production

# Optional NPM automation (auth) token build argument
# ARG NPM_TOKEN

# Optionally authenticate NPM registry
# RUN npm set //registry.npmjs.org/:_authToken ${NPM_TOKEN}

WORKDIR /app

# Copy dependencies files
COPY package*.json ./

# Install runtime dependecies (without dev/test dependecies)

RUN npm ci --only=production

# Copy production build
COPY --from=development /app/dist/ ./dist/
COPY --from=development /app/.env .env
COPY --from=development /app/prisma/ ./prisma
COPY --from=development /app/node_modules/.prisma/client  ./node_modules/.prisma/client

ENV NODE_ENV production

# Start application
CMD [  "npm", "run", "start:migrate:prod" ]